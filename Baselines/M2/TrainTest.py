import pickle
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score, mean_squared_error, precision_score, recall_score, confusion_matrix, f1_score, roc_auc_score



def DataLoader():
    
    Mixed, benign, malicious, obfuscated = [],[],[],[]
    with open('./Mixed.pkl', 'rb') as f:
        dataset = pickle.load(f)
        for dt in dataset:
            Mixed.append(dt[:])
    with open('./benign.pkl', 'rb') as f:
        dataset = pickle.load(f)
        for dt in dataset:
            benign.append(dt[:])
    with open('./malicious.pkl', 'rb') as f:
        dataset = pickle.load(f)
        for dt in dataset:
            malicious.append(dt[:])
    with open('./STRING_Obfuscation.pkl', 'rb') as f:
        dataset = pickle.load(f)
        for dt in dataset:
            obfuscated.append(dt[:])
        
    X = benign+malicious
    y = [0]*len(benign) + [1]*len(malicious)
    
    
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
    
        
    Mix_y=[1]*len(Mixed)+y_test
    Obs_y=[1]*len(obfuscated)+y_test
    
    return X_train, y_train, X_test, y_test, Mixed+X_test, Mix_y, Obs_y, obfuscated+X_test




def Model_train_test():
    X_train, y_train, X_test, y_test, Mix_X, Mix_y, Obs_y, Obs_X = DataLoader()
    print(len(X_train))
    print("##### Finish loading Datasets #######")
    
    RFmodel = RandomForestClassifier(n_estimators=70, max_samples=8, random_state=0)
    RFmodel.fit(X_train, y_train)
    
    # y_pred = RFmodel.predict(X_test)
    # Mix_pred = RFmodel.predict(Mix_X)
    Obs_pred = RFmodel.predict(Obs_X)
    

#     print("########## Test 1 ###########")
#     print(accuracy_score(y_test, y_pred))
#     print(recall_score(y_test, y_pred, average="macro"))
#     print(precision_score(y_test, y_pred, average="macro"))
#     print(f1_score(y_test, y_pred, average="macro"))
#     print(roc_auc_score(y_test, y_pred))


#     print("########## Test 2 ###########")
#     print(accuracy_score(Mix_y, Mix_pred))
#     print(recall_score(Mix_y, Mix_pred, average="macro"))
#     print(precision_score(Mix_y, Mix_pred, average="macro"))
#     print(f1_score(Mix_y, Mix_pred, average="macro"))
#     print(roc_auc_score(Mix_y, Mix_pred))

    print("########### 3rd TEST ##############")
    print(accuracy_score(Obs_y, Obs_pred))
    print(recall_score(Obs_y, Obs_pred, average="macro"))
    print(precision_score(Obs_y, Obs_pred, average="macro"))
    print(f1_score(Obs_y, Obs_pred, average="macro"))
    print(roc_auc_score(Obs_y, Obs_pred))

    





if __name__ == "__main__":
    Model_train_test()